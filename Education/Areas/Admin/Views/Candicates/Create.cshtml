@model Education.DAL.Candicate

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="page-header">
    <div class="row align-items-center">
        <div class="col">
            <h3 class="page-title">Add Candicate</h3>
            <ul class="breadcrumb">
                <li class="breadcrumb-item">@Html.ActionLink("Candicates", "Index")</li>
                <li class="breadcrumb-item active">Add Candicate</li>
            </ul>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-12">
                        <h5 class="form-title"><span>Student Information</span></h5>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                            <select class="form-control">
                                <option value="0">Select Gender</option>
                                <option value="1">Female</option>
                                <option value="2">Male</option>
                                <option value="3">Others</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.JoiningDate, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
                            <input type="file" name="Image" class="form-control" />
                        </div>
                    </div>
                    <div class="col-12">
                        <h5 class="form-title"><span>Parent Information</span></h5>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ParentName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ParentName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ParentName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ParentPhone, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ParentPhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ParentPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-12">
                        <h5 class="form-title"><span>Login Details</span></h5>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @*@Html.LabelFor(model => model.User.FullName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.User.FullName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.User.FullName, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @*@Html.LabelFor(model => model.User.UserName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            @*@Html.LabelFor(model => model.User.Password, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.User.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.User.Password, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                    <div class="col-12 col-sm-6">
                        <div class="form-group">
                            <label>Repeat Password</label>
                            <input type="text" name="repeat-password" class="form-control" />
                        </div>
                    </div>
                    <div class="col-12">
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </div>
                }
                </div>
        </div>
    </div>
</div>
